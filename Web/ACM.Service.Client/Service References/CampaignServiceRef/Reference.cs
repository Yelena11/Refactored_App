//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using ACM.Util.WCFUtil;
namespace ACM.Service.Client.CampaignServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CampaignServiceRef.ICampaign")]
    public interface ICampaign {
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetAllCampaings", ReplyAction="http://tempuri.org/ICampaign/GetAllCampaingsResponse")]
        System.Collections.Generic.List<ACM.Model.Campaign> GetAllCampaings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetAllCampaings", ReplyAction="http://tempuri.org/ICampaign/GetAllCampaingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetAllCampaingsAsync();
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaign", ReplyAction="http://tempuri.org/ICampaign/GetCampaignResponse")]
        System.Collections.Generic.List<ACM.Model.Campaign> GetCampaign(int campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaign", ReplyAction="http://tempuri.org/ICampaign/GetCampaignResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetCampaignAsync(int campaignId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignTargetFileProvider", ReplyAction="http://tempuri.org/ICampaign/GetCampaignTargetFileProviderResponse")]
        System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> GetCampaignTargetFileProvider(int campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignTargetFileProvider", ReplyAction="http://tempuri.org/ICampaign/GetCampaignTargetFileProviderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider>> GetCampaignTargetFileProviderAsync(int campaignId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignLocation", ReplyAction="http://tempuri.org/ICampaign/GetCampaignLocationResponse")]
        System.Collections.Generic.List<ACM.Model.CampaignLocation> GetCampaignLocation(int campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignLocation", ReplyAction="http://tempuri.org/ICampaign/GetCampaignLocationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignLocation>> GetCampaignLocationAsync(int campaignId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRequestorDashboard", ReplyAction="http://tempuri.org/ICampaign/GetRequestorDashboardResponse")]
        System.Collections.Generic.List<ACM.Model.CampaignRequestor> GetRequestorDashboard(int requestorId, int lobId, string status, bool isLobRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRequestorDashboard", ReplyAction="http://tempuri.org/ICampaign/GetRequestorDashboardResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignRequestor>> GetRequestorDashboardAsync(int requestorId, int lobId, string status, bool isLobRequest);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignDetials", ReplyAction="http://tempuri.org/ICampaign/CampaignDetialsResponse")]
        ACM.Model.CustomModel.CampaignDetail CampaignDetials(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignDetials", ReplyAction="http://tempuri.org/ICampaign/CampaignDetialsResponse")]
        System.Threading.Tasks.Task<ACM.Model.CustomModel.CampaignDetail> CampaignDetialsAsync(int CampaignId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRegions", ReplyAction="http://tempuri.org/ICampaign/GetRegionsResponse")]
        System.Collections.Generic.List<ACM.Model.Region> GetRegions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRegions", ReplyAction="http://tempuri.org/ICampaign/GetRegionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Region>> GetRegionsAsync();
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CancelCampaign", ReplyAction="http://tempuri.org/ICampaign/CancelCampaignResponse")]
        void CancelCampaign(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CancelCampaign", ReplyAction="http://tempuri.org/ICampaign/CancelCampaignResponse")]
        System.Threading.Tasks.Task CancelCampaignAsync(int CampaignId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRequestorDetails", ReplyAction="http://tempuri.org/ICampaign/GetRequestorDetailsResponse")]
        System.Collections.Generic.List<ACM.Model.User> GetRequestorDetails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetRequestorDetails", ReplyAction="http://tempuri.org/ICampaign/GetRequestorDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.User>> GetRequestorDetailsAsync(int userId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/SaveCampaign", ReplyAction="http://tempuri.org/ICampaign/SaveCampaignResponse")]
        void SaveCampaign(ACM.Model.Campaign campaign, System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> campaignTFPL, System.Collections.Generic.List<ACM.Model.CampaignLocation> campaignLocList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/SaveCampaign", ReplyAction="http://tempuri.org/ICampaign/SaveCampaignResponse")]
        System.Threading.Tasks.Task SaveCampaignAsync(ACM.Model.Campaign campaign, System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> campaignTFPL, System.Collections.Generic.List<ACM.Model.CampaignLocation> campaignLocList);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignInq", ReplyAction="http://tempuri.org/ICampaign/CampaignInqResponse")]
        ACM.Model.Campaign CampaignInq(ACM.Model.Campaign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignInq", ReplyAction="http://tempuri.org/ICampaign/CampaignInqResponse")]
        System.Threading.Tasks.Task<ACM.Model.Campaign> CampaignInqAsync(ACM.Model.Campaign request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignAddResponse")]
        ACM.Model.Campaign CampaignAdd(ACM.Model.Campaign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignAddResponse")]
        System.Threading.Tasks.Task<ACM.Model.Campaign> CampaignAddAsync(ACM.Model.Campaign request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMod", ReplyAction="http://tempuri.org/ICampaign/CampaignModResponse")]
        string CampaignMod(ACM.Model.Campaign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMod", ReplyAction="http://tempuri.org/ICampaign/CampaignModResponse")]
        System.Threading.Tasks.Task<string> CampaignModAsync(ACM.Model.Campaign request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignDel", ReplyAction="http://tempuri.org/ICampaign/CampaignDelResponse")]
        string CampaignDel(ACM.Model.Campaign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignDel", ReplyAction="http://tempuri.org/ICampaign/CampaignDelResponse")]
        System.Threading.Tasks.Task<string> CampaignDelAsync(ACM.Model.Campaign request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignInfo", ReplyAction="http://tempuri.org/ICampaign/CampaignInfoResponse")]
        System.Collections.Generic.List<ACM.Model.Campaign> CampaignInfo(ACM.Model.Campaign request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignInfo", ReplyAction="http://tempuri.org/ICampaign/CampaignInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> CampaignInfoAsync(ACM.Model.Campaign request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainframeInq", ReplyAction="http://tempuri.org/ICampaign/CampaignMainframeInqResponse")]
        ACM.Model.CampaignMainFrame CampaignMainframeInq(ACM.Model.CampaignMainFrame request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainframeInq", ReplyAction="http://tempuri.org/ICampaign/CampaignMainframeInqResponse")]
        System.Threading.Tasks.Task<ACM.Model.CampaignMainFrame> CampaignMainframeInqAsync(ACM.Model.CampaignMainFrame request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameAddResponse")]
        string CampaignMainFrameAdd(ACM.Model.CampaignMainFrame request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameAddResponse")]
        System.Threading.Tasks.Task<string> CampaignMainFrameAddAsync(ACM.Model.CampaignMainFrame request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameMod", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameModResponse")]
        string CampaignMainFrameMod(ACM.Model.CampaignMainFrame request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameMod", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameModResponse")]
        System.Threading.Tasks.Task<string> CampaignMainFrameModAsync(ACM.Model.CampaignMainFrame request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameDel", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameDelResponse")]
        string CampaignMainFrameDel(ACM.Model.CampaignMainFrame request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignMainFrameDel", ReplyAction="http://tempuri.org/ICampaign/CampaignMainFrameDelResponse")]
        System.Threading.Tasks.Task<string> CampaignMainFrameDelAsync(ACM.Model.CampaignMainFrame request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpInfo", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpInfoResponse")]
        System.Collections.Generic.List<ACM.Model.CampaignFollowUp> CampaignFollowUpInfo(ACM.Model.CampaignFollowUp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpInfo", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignFollowUp>> CampaignFollowUpInfoAsync(ACM.Model.CampaignFollowUp request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpInq", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpInqResponse")]
        ACM.Model.CampaignFollowUp CampaignFollowUpInq(ACM.Model.CampaignFollowUp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpInq", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpInqResponse")]
        System.Threading.Tasks.Task<ACM.Model.CampaignFollowUp> CampaignFollowUpInqAsync(ACM.Model.CampaignFollowUp request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpAddResponse")]
        string CampaignFollowUpAdd(ACM.Model.CampaignFollowUp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpAdd", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpAddResponse")]
        System.Threading.Tasks.Task<string> CampaignFollowUpAddAsync(ACM.Model.CampaignFollowUp request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpMod", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpModResponse")]
        string CampaignFollowUpMod(ACM.Model.CampaignFollowUp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpMod", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpModResponse")]
        System.Threading.Tasks.Task<string> CampaignFollowUpModAsync(ACM.Model.CampaignFollowUp request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpDel", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpDelResponse")]
        string CampaignFollowUpDel(ACM.Model.CampaignFollowUp request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaignFollowUpDel", ReplyAction="http://tempuri.org/ICampaign/CampaignFollowUpDelResponse")]
        System.Threading.Tasks.Task<string> CampaignFollowUpDelAsync(ACM.Model.CampaignFollowUp request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileInfo", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileInfoResponse")]
        System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> CampaigTargetFileInfo(ACM.Model.CampaignTargetFileProvider request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileInfo", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider>> CampaigTargetFileInfoAsync(ACM.Model.CampaignTargetFileProvider request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileInq", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileInqResponse")]
        ACM.Model.CampaignTargetFileProvider CampaigTargetFileInq(ACM.Model.CampaignTargetFileProvider request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileInq", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileInqResponse")]
        System.Threading.Tasks.Task<ACM.Model.CampaignTargetFileProvider> CampaigTargetFileInqAsync(ACM.Model.CampaignTargetFileProvider request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileAdd", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileAddResponse")]
        string CampaigTargetFileAdd(ACM.Model.CampaignTargetFileProvider request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileAdd", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileAddResponse")]
        System.Threading.Tasks.Task<string> CampaigTargetFileAddAsync(ACM.Model.CampaignTargetFileProvider request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileMod", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileModResponse")]
        string CampaigTargetFileMod(ACM.Model.CampaignTargetFileProvider request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileMod", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileModResponse")]
        System.Threading.Tasks.Task<string> CampaigTargetFileModAsync(ACM.Model.CampaignTargetFileProvider request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileDel", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileDelResponse")]
        string CampaigTargetFileDel(ACM.Model.CampaignTargetFileProvider request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/CampaigTargetFileDel", ReplyAction="http://tempuri.org/ICampaign/CampaigTargetFileDelResponse")]
        System.Threading.Tasks.Task<string> CampaigTargetFileDelAsync(ACM.Model.CampaignTargetFileProvider request);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignDashboard", ReplyAction="http://tempuri.org/ICampaign/GetCampaignDashboardResponse")]
        System.Collections.Generic.List<ACM.Model.Campaign> GetCampaignDashboard(string AcmUserId, string CampaignStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCampaignDashboard", ReplyAction="http://tempuri.org/ICampaign/GetCampaignDashboardResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetCampaignDashboardAsync(string AcmUserId, string CampaignStatus);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetMasterDropDownDataforMasterTables", ReplyAction="http://tempuri.org/ICampaign/GetMasterDropDownDataforMasterTablesResponse")]
        System.Collections.Generic.List<ACM.Model.CustomModel.GetDataForDropDownList> GetMasterDropDownDataforMasterTables(string MasterTableID, string MasterTableDescription, string MasterTableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetMasterDropDownDataforMasterTables", ReplyAction="http://tempuri.org/ICampaign/GetMasterDropDownDataforMasterTablesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CustomModel.GetDataForDropDownList>> GetMasterDropDownDataforMasterTablesAsync(string MasterTableID, string MasterTableDescription, string MasterTableName);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCategoryById", ReplyAction="http://tempuri.org/ICampaign/GetCategoryByIdResponse")]
        System.Collections.Generic.List<ACM.Model.Category> GetCategoryById(int SuperCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetCategoryById", ReplyAction="http://tempuri.org/ICampaign/GetCategoryByIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Category>> GetCategoryByIdAsync(int SuperCategoryId);
        [ReferencePreservingDataContractFormat]
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetSubCategoryById", ReplyAction="http://tempuri.org/ICampaign/GetSubCategoryByIdResponse")]
        System.Collections.Generic.List<ACM.Model.SubCategory> GetSubCategoryById(int CategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampaign/GetSubCategoryById", ReplyAction="http://tempuri.org/ICampaign/GetSubCategoryByIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.SubCategory>> GetSubCategoryByIdAsync(int CategoryID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICampaignChannel : ACM.Service.Client.CampaignServiceRef.ICampaign, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampaignClient : System.ServiceModel.ClientBase<ACM.Service.Client.CampaignServiceRef.ICampaign>, ACM.Service.Client.CampaignServiceRef.ICampaign {
        
        public CampaignClient() {
        }
        
        public CampaignClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CampaignClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampaignClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampaignClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ACM.Model.Campaign> GetAllCampaings() {
            return base.Channel.GetAllCampaings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetAllCampaingsAsync() {
            return base.Channel.GetAllCampaingsAsync();
        }
        
        public System.Collections.Generic.List<ACM.Model.Campaign> GetCampaign(int campaignId) {
            return base.Channel.GetCampaign(campaignId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetCampaignAsync(int campaignId) {
            return base.Channel.GetCampaignAsync(campaignId);
        }
        
        public System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> GetCampaignTargetFileProvider(int campaignId) {
            return base.Channel.GetCampaignTargetFileProvider(campaignId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider>> GetCampaignTargetFileProviderAsync(int campaignId) {
            return base.Channel.GetCampaignTargetFileProviderAsync(campaignId);
        }
        
        public System.Collections.Generic.List<ACM.Model.CampaignLocation> GetCampaignLocation(int campaignId) {
            return base.Channel.GetCampaignLocation(campaignId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignLocation>> GetCampaignLocationAsync(int campaignId) {
            return base.Channel.GetCampaignLocationAsync(campaignId);
        }
        
        public System.Collections.Generic.List<ACM.Model.CampaignRequestor> GetRequestorDashboard(int requestorId, int lobId, string status, bool isLobRequest) {
            return base.Channel.GetRequestorDashboard(requestorId, lobId, status, isLobRequest);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignRequestor>> GetRequestorDashboardAsync(int requestorId, int lobId, string status, bool isLobRequest) {
            return base.Channel.GetRequestorDashboardAsync(requestorId, lobId, status, isLobRequest);
        }
        
        public ACM.Model.CustomModel.CampaignDetail CampaignDetials(int CampaignId) {
            return base.Channel.CampaignDetials(CampaignId);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.CustomModel.CampaignDetail> CampaignDetialsAsync(int CampaignId) {
            return base.Channel.CampaignDetialsAsync(CampaignId);
        }
        
        public System.Collections.Generic.List<ACM.Model.Region> GetRegions() {
            return base.Channel.GetRegions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Region>> GetRegionsAsync() {
            return base.Channel.GetRegionsAsync();
        }
        
        public void CancelCampaign(int CampaignId) {
            base.Channel.CancelCampaign(CampaignId);
        }
        
        public System.Threading.Tasks.Task CancelCampaignAsync(int CampaignId) {
            return base.Channel.CancelCampaignAsync(CampaignId);
        }
        
        public System.Collections.Generic.List<ACM.Model.User> GetRequestorDetails(int userId) {
            return base.Channel.GetRequestorDetails(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.User>> GetRequestorDetailsAsync(int userId) {
            return base.Channel.GetRequestorDetailsAsync(userId);
        }
        
        public void SaveCampaign(ACM.Model.Campaign campaign, System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> campaignTFPL, System.Collections.Generic.List<ACM.Model.CampaignLocation> campaignLocList) {
            base.Channel.SaveCampaign(campaign, campaignTFPL, campaignLocList);
        }
        
        public System.Threading.Tasks.Task SaveCampaignAsync(ACM.Model.Campaign campaign, System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> campaignTFPL, System.Collections.Generic.List<ACM.Model.CampaignLocation> campaignLocList) {
            return base.Channel.SaveCampaignAsync(campaign, campaignTFPL, campaignLocList);
        }
        
        public ACM.Model.Campaign CampaignInq(ACM.Model.Campaign request) {
            return base.Channel.CampaignInq(request);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.Campaign> CampaignInqAsync(ACM.Model.Campaign request) {
            return base.Channel.CampaignInqAsync(request);
        }
        
        public ACM.Model.Campaign CampaignAdd(ACM.Model.Campaign request) {
            return base.Channel.CampaignAdd(request);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.Campaign> CampaignAddAsync(ACM.Model.Campaign request) {
            return base.Channel.CampaignAddAsync(request);
        }
        
        public string CampaignMod(ACM.Model.Campaign request) {
            return base.Channel.CampaignMod(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignModAsync(ACM.Model.Campaign request) {
            return base.Channel.CampaignModAsync(request);
        }
        
        public string CampaignDel(ACM.Model.Campaign request) {
            return base.Channel.CampaignDel(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignDelAsync(ACM.Model.Campaign request) {
            return base.Channel.CampaignDelAsync(request);
        }
        
        public System.Collections.Generic.List<ACM.Model.Campaign> CampaignInfo(ACM.Model.Campaign request) {
            return base.Channel.CampaignInfo(request);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> CampaignInfoAsync(ACM.Model.Campaign request) {
            return base.Channel.CampaignInfoAsync(request);
        }
        
        public ACM.Model.CampaignMainFrame CampaignMainframeInq(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainframeInq(request);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.CampaignMainFrame> CampaignMainframeInqAsync(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainframeInqAsync(request);
        }
        
        public string CampaignMainFrameAdd(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameAdd(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignMainFrameAddAsync(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameAddAsync(request);
        }
        
        public string CampaignMainFrameMod(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameMod(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignMainFrameModAsync(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameModAsync(request);
        }
        
        public string CampaignMainFrameDel(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameDel(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignMainFrameDelAsync(ACM.Model.CampaignMainFrame request) {
            return base.Channel.CampaignMainFrameDelAsync(request);
        }
        
        public System.Collections.Generic.List<ACM.Model.CampaignFollowUp> CampaignFollowUpInfo(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpInfo(request);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignFollowUp>> CampaignFollowUpInfoAsync(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpInfoAsync(request);
        }
        
        public ACM.Model.CampaignFollowUp CampaignFollowUpInq(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpInq(request);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.CampaignFollowUp> CampaignFollowUpInqAsync(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpInqAsync(request);
        }
        
        public string CampaignFollowUpAdd(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpAdd(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignFollowUpAddAsync(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpAddAsync(request);
        }
        
        public string CampaignFollowUpMod(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpMod(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignFollowUpModAsync(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpModAsync(request);
        }
        
        public string CampaignFollowUpDel(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpDel(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaignFollowUpDelAsync(ACM.Model.CampaignFollowUp request) {
            return base.Channel.CampaignFollowUpDelAsync(request);
        }
        
        public System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider> CampaigTargetFileInfo(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileInfo(request);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CampaignTargetFileProvider>> CampaigTargetFileInfoAsync(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileInfoAsync(request);
        }
        
        public ACM.Model.CampaignTargetFileProvider CampaigTargetFileInq(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileInq(request);
        }
        
        public System.Threading.Tasks.Task<ACM.Model.CampaignTargetFileProvider> CampaigTargetFileInqAsync(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileInqAsync(request);
        }
        
        public string CampaigTargetFileAdd(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileAdd(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaigTargetFileAddAsync(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileAddAsync(request);
        }
        
        public string CampaigTargetFileMod(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileMod(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaigTargetFileModAsync(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileModAsync(request);
        }
        
        public string CampaigTargetFileDel(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileDel(request);
        }
        
        public System.Threading.Tasks.Task<string> CampaigTargetFileDelAsync(ACM.Model.CampaignTargetFileProvider request) {
            return base.Channel.CampaigTargetFileDelAsync(request);
        }
        
        public System.Collections.Generic.List<ACM.Model.Campaign> GetCampaignDashboard(string AcmUserId, string CampaignStatus) {
            return base.Channel.GetCampaignDashboard(AcmUserId, CampaignStatus);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Campaign>> GetCampaignDashboardAsync(string AcmUserId, string CampaignStatus) {
            return base.Channel.GetCampaignDashboardAsync(AcmUserId, CampaignStatus);
        }
        
        public System.Collections.Generic.List<ACM.Model.CustomModel.GetDataForDropDownList> GetMasterDropDownDataforMasterTables(string MasterTableID, string MasterTableDescription, string MasterTableName) {
            return base.Channel.GetMasterDropDownDataforMasterTables(MasterTableID, MasterTableDescription, MasterTableName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.CustomModel.GetDataForDropDownList>> GetMasterDropDownDataforMasterTablesAsync(string MasterTableID, string MasterTableDescription, string MasterTableName) {
            return base.Channel.GetMasterDropDownDataforMasterTablesAsync(MasterTableID, MasterTableDescription, MasterTableName);
        }
        
        public System.Collections.Generic.List<ACM.Model.Category> GetCategoryById(int SuperCategoryId) {
            return base.Channel.GetCategoryById(SuperCategoryId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.Category>> GetCategoryByIdAsync(int SuperCategoryId) {
            return base.Channel.GetCategoryByIdAsync(SuperCategoryId);
        }
        
        public System.Collections.Generic.List<ACM.Model.SubCategory> GetSubCategoryById(int CategoryID) {
            return base.Channel.GetSubCategoryById(CategoryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ACM.Model.SubCategory>> GetSubCategoryByIdAsync(int CategoryID) {
            return base.Channel.GetSubCategoryByIdAsync(CategoryID);
        }
    }
}
